================================================================================
SHAART v0.0 

Purpose: 
SHAART is intended as an in-house solution for teaching PHY2010 ("Physics for 
Audio Engineering Technology") at Belmont University.  Perhaps others will find 
it useful as well.  ...That and the PHY4410 ("Survey of Advanced Physics") 
students and I have been learing Python this semester to implement our 
simulations and analysis, so writing this also serves as an instructive 
exercise in Python programming.

License: 
The source code any binaries are free.  Free as in beer, and free as in "do 
whatever you want with them."  SHAART was made using code provided by others for 
free.   "Freely you have received, freely give."

Nomenclature: 
The name is an acronym using the author's initials (S.H.), along with words 
like "Acoustic," "Analysis," "Reverberation Time" or "Research Tools" -- as well 
as, it is hoped, a lighthearted and not-legally-problematic play on words with 
the name of the industry-standard SMAART audio analysis software made by 
Rational Acoustics,Inc.  (SHAART is in no way affiliated with SMAART or 
Rational Acoustics, fyi.)  I mean, "SHAART" is just hilarious to say.

Author: Dr. Scott H. Hawley, Associate Professor of Physics, 
        Belmont University, Nashville TN USA.  
Date:   March 24, 2015

Contact:
Improvements, bug reports, inquiries, donations, etc.: scott.hawley@(belmont)
================================================================================


Usage:
=====
Go up to the "File" tab (or press command-O) and select a WAV file to analyze.

Note: SHAART was made using Python and the SciPy package (among others).  SciPy 
can read *some* WAV files but not others.  Not sure why.  If you're having file 
input issues, including wanting to read some other format (e.g., MP3), then try
loading your file into Audacity and exporting it as a WAV.  Then read the new 
file with SHAART.

Note: You don't need a WAV file to use the room mode calculator.


Running/Building from Source:
============================
Running from source requires python packages pyqt4, scipy, numpy, matplotlib, 
...aaaand probably a host of others.  Just run ./SHAART.py.

To modify the user interface: The interface was built on QT4 using the QT 
Designer application, which reads & saves the file ui_shaart.ui:
% Designer ui_shaart.ui 

This is then converted to a python script by running, e.g.,

%  pyuic4-2.7 ui_shaart.ui > ! ui_shaart.py

There is also a setup.py file provided for building a standalone application 
via py2app:

% python setup.py py2app

The final application gets placed in a new subdirectory called dist/. 
Note that even if the py2app build looks like it fails, there will usually be
a fully-functional application waiting in dist/ anyway!

List of files:
    SHAART.py         - the main control window, and most of the mode calc's
    rt60widget.py     - most of the rt60 tab functionality
    pwrspecwidget.py  - power spectrum
    spectrowidget.py  - spectrogram
    rcgraphwidget.py  - reverb characteristic graph for the Sabine calc
    waterwidget.py    - waterfall plot
    ui_shaart.ui      - QT Designer file for the user interface 
    ui_shaart.py      - auto-generated by pyuic
    setup.py          - used for py2app.  See above.
    shaart_logo.png   - one of the most horrifying graphic designs ever

TODO/Future Work:   (write these yourself and submit them for inclusion!)
================
  - Read & plot multiple (i.e., at least 2) files simultaneously
  - Theoretical graph of possible room response using mode calculation
  - "Inverse Spectrograph": encode an image to a sound file


SHAART. 

